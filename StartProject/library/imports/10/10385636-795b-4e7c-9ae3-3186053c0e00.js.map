{"version":3,"sources":["assets\\scripts\\Game.js"],"names":["cc","Class","Component","properties","starPrefab","type","Prefab","starCount","Integer","maxStarDuration","minStarDuration","ground","Node","player","scoreDisplay","Label","onLoad","groundY","y","height","i","generateNewStar","score","newStar","instantiate","node","addChild","setPosition","generateStarPos","getComponent","game","randX","randY","Math","random","jumpHeight","maxX","width","v2","gainScore","string"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEAA,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAGLC,EAAAA,UAAU,EAAE;AACR;;;AAGA;AACAC,IAAAA,UAAU,EAAC;AACP,iBAAQ,IADD;AAEPC,MAAAA,IAAI,EAAEL,EAAE,CAACM;AAFF,KALH;AASRC,IAAAA,SAAS,EAAC;AACN,iBAAQ,CADF;AAENF,MAAAA,IAAI,EAACL,EAAE,CAACQ;AAFF,KATF;AAcR;AACAC,IAAAA,eAAe,EAAC,CAfR;AAgBRC,IAAAA,eAAe,EAAC,CAhBR;AAkBR;AACAC,IAAAA,MAAM,EAAC;AACH,iBAAQ,IADL;AAEHN,MAAAA,IAAI,EAACL,EAAE,CAACY;AAFL,KAnBC;AAwBR;AACAC,IAAAA,MAAM,EAAC;AACH,iBAAQ,IADL;AAEHR,MAAAA,IAAI,EAACL,EAAE,CAACY;AAFL,KAzBC;AA8BRE,IAAAA,YAAY,EAAC;AACT,iBAAQ,IADC;AAETT,MAAAA,IAAI,EAACL,EAAE,CAACe;AAFC;AA9BL,GAHP;AAyCL;AAEAC,EAAAA,MA3CK,oBA2CK;AACN,SAAKC,OAAL,GAAe,KAAKN,MAAL,CAAYO,CAAZ,GAAgB,KAAKP,MAAL,CAAYQ,MAAZ,GAAmB,CAAlD;;AAEA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAcA,CAAC,GAAG,KAAKb,SAAvB,EAAiCa,CAAC,EAAlC,EAAqC;AACjC,WAAKC,eAAL;AACH;;AAGD,SAAKC,KAAL,GAAa,CAAb;AACH,GApDI;AAsDLD,EAAAA,eAAe,EAAC,2BAAU;AACtB;AACA,QAAIE,OAAO,GAAGvB,EAAE,CAACwB,WAAH,CAAe,KAAKpB,UAApB,CAAd,CAFsB,CAItB;;AACA,SAAKqB,IAAL,CAAUC,QAAV,CAAmBH,OAAnB,EALsB,CAOtB;;AACAA,IAAAA,OAAO,CAACI,WAAR,CAAoB,KAAKC,eAAL,EAApB,EARsB,CAUtB;;AACAL,IAAAA,OAAO,CAACM,YAAR,CAAqB,MAArB,EAA6BC,IAA7B,GAAoC,IAApC;AAEH,GAnEI;AAqEL;AACAF,EAAAA,eAtEK,6BAsEY;AACb,QAAIG,KAAK,GAAG,CAAZ;AACA,QAAIC,KAAK,GAAG,KAAKf,OAAL,GAAegB,IAAI,CAACC,MAAL,KAAgB,KAAKrB,MAAL,CAAYgB,YAAZ,CAAyB,QAAzB,EAAmCM,UAAlE,GAA+E,EAA3F;AACA,QAAIC,IAAI,GAAG,KAAKX,IAAL,CAAUY,KAAV,GAAkB,CAA7B;AAEAN,IAAAA,KAAK,GAAG,CAACE,IAAI,CAACC,MAAL,KAAgB,GAAjB,IAAwB,CAAxB,GAA4BE,IAApC;AACA,WAAOpC,EAAE,CAACsC,EAAH,CAAMP,KAAN,EAAYC,KAAZ,CAAP;AACH,GA7EI;AA+EL;AAEAO,EAAAA,SAjFK,uBAiFM;AACP,SAAKjB,KAAL,GAAa,KAAKA,KAAL,GAAa,CAA1B;AACA,SAAKR,YAAL,CAAkB0B,MAAlB,gBAAsC,KAAKlB,KAA3C;AACH;AApFI,CAAT","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        /**\r\n         * type ：这里进行了属性检查\r\n         */\r\n        // 星星预置资源\r\n        starPrefab:{\r\n            default:null,\r\n            type: cc.Prefab\r\n        },\r\n        starCount:{\r\n            default:1,\r\n            type:cc.Integer,\r\n        },\r\n\r\n        // 星星消失时间的范围\r\n        maxStarDuration:0,\r\n        minStarDuration:0,\r\n\r\n        // 地面节点\r\n        ground:{\r\n            default:null,\r\n            type:cc.Node,\r\n        },\r\n\r\n        // player节点\r\n        player:{\r\n            default:null,\r\n            type:cc.Node,\r\n        },\r\n\r\n        scoreDisplay:{\r\n            default:null,\r\n            type:cc.Label\r\n        },\r\n\r\n\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        this.groundY = this.ground.y + this.ground.height/2;\r\n\r\n        for(let i = 0;i < this.starCount;i++){\r\n            this.generateNewStar();\r\n        }\r\n\r\n\r\n        this.score = 0;\r\n    },\r\n\r\n    generateNewStar:function(){\r\n        // 1、根据prefab，生成一个节点\r\n        let newStar = cc.instantiate(this.starPrefab);\r\n\r\n        // 2、将节点加入到界面中\r\n        this.node.addChild(newStar);\r\n\r\n        // 3、设置位置\r\n        newStar.setPosition(this.generateStarPos());\r\n\r\n        // 4、在星星组件上，暂存Game对象的引用\r\n        newStar.getComponent(\"Star\").game = this;\r\n        \r\n    },\r\n\r\n    // 生成随机位置\r\n    generateStarPos(){\r\n        let randX = 0;\r\n        let randY = this.groundY + Math.random() * this.player.getComponent(\"Player\").jumpHeight + 50;\r\n        let maxX = this.node.width / 2;\r\n\r\n        randX = (Math.random() - 0.5) * 2 * maxX;\r\n        return cc.v2(randX,randY);\r\n    },\r\n\r\n    // update (dt) {},\r\n\r\n    gainScore(){\r\n        this.score = this.score + 1;\r\n        this.scoreDisplay.string = `Score : ${this.score}`;\r\n    }\r\n});\r\n"]}